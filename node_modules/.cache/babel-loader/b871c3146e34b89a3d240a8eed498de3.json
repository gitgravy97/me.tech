{"ast":null,"code":"import { useCallback, useEffect, useMemo, useState } from 'react';\n/**\n * Returns a flag which determines if the document matches the given media query string.\n *\n * @param {string} query Media query string\n * @returns {boolean} Whether the document matches the given media query string\n */\n\nexport default function useMatchMedia(query) {\n  var mql = useMemo(function () {\n    return window.matchMedia(query);\n  }, [query]);\n\n  var _useState = useState(mql.matches),\n      matches = _useState[0],\n      setMatches = _useState[1];\n\n  var handleMql = useCallback(function (event) {\n    setMatches(event.matches);\n  }, []);\n  useEffect(function () {\n    mql.addListener(handleMql);\n    return function () {\n      mql.removeListener(handleMql);\n    };\n  }, [mql, handleMql]);\n  return matches;\n}","map":{"version":3,"sources":["/home/letterkenny/personal-site-remake/node_modules/@wojtekmaj/react-hooks/dist/esm/useMatchMedia.js"],"names":["useCallback","useEffect","useMemo","useState","useMatchMedia","query","mql","window","matchMedia","_useState","matches","setMatches","handleMql","event","addListener","removeListener"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,SAAtB,EAAiCC,OAAjC,EAA0CC,QAA1C,QAA0D,OAA1D;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC3C,MAAIC,GAAG,GAAGJ,OAAO,CAAC,YAAY;AAC5B,WAAOK,MAAM,CAACC,UAAP,CAAkBH,KAAlB,CAAP;AACD,GAFgB,EAEd,CAACA,KAAD,CAFc,CAAjB;;AAIA,MAAII,SAAS,GAAGN,QAAQ,CAACG,GAAG,CAACI,OAAL,CAAxB;AAAA,MACIA,OAAO,GAAGD,SAAS,CAAC,CAAD,CADvB;AAAA,MAEIE,UAAU,GAAGF,SAAS,CAAC,CAAD,CAF1B;;AAIA,MAAIG,SAAS,GAAGZ,WAAW,CAAC,UAAUa,KAAV,EAAiB;AAC3CF,IAAAA,UAAU,CAACE,KAAK,CAACH,OAAP,CAAV;AACD,GAF0B,EAExB,EAFwB,CAA3B;AAGAT,EAAAA,SAAS,CAAC,YAAY;AACpBK,IAAAA,GAAG,CAACQ,WAAJ,CAAgBF,SAAhB;AACA,WAAO,YAAY;AACjBN,MAAAA,GAAG,CAACS,cAAJ,CAAmBH,SAAnB;AACD,KAFD;AAGD,GALQ,EAKN,CAACN,GAAD,EAAMM,SAAN,CALM,CAAT;AAMA,SAAOF,OAAP;AACD","sourcesContent":["import { useCallback, useEffect, useMemo, useState } from 'react';\n/**\n * Returns a flag which determines if the document matches the given media query string.\n *\n * @param {string} query Media query string\n * @returns {boolean} Whether the document matches the given media query string\n */\n\nexport default function useMatchMedia(query) {\n  var mql = useMemo(function () {\n    return window.matchMedia(query);\n  }, [query]);\n\n  var _useState = useState(mql.matches),\n      matches = _useState[0],\n      setMatches = _useState[1];\n\n  var handleMql = useCallback(function (event) {\n    setMatches(event.matches);\n  }, []);\n  useEffect(function () {\n    mql.addListener(handleMql);\n    return function () {\n      mql.removeListener(handleMql);\n    };\n  }, [mql, handleMql]);\n  return matches;\n}"]},"metadata":{},"sourceType":"module"}