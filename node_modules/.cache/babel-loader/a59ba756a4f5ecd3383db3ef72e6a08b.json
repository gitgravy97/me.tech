{"ast":null,"code":"import { useEffect, useState } from 'react';\n/**\n * @typedef LatLng\n * @property {number} latitude Latitude\n * @property {number} longitude Longitude\n */\n\n/**\n * Returns current position from Geolocation API.\n *\n * @param {object} [options] Options to pass to Geolocation.getCurrentPosition\n *   and Geolocation.watchPosition. See https://developer.mozilla.org/en-US/docs/Web/API/PositionOptions\n * @returns {LatLng} Object wth latitude and longitude\n */\n\nexport default function useCurrentPosition(options) {\n  var _useState = useState(null),\n      position = _useState[0],\n      setPosition = _useState[1];\n\n  useEffect(function () {\n    if (!('geolocation' in navigator)) {\n      return undefined;\n    }\n\n    function onPositionReceive(result) {\n      setPosition(result.coords);\n    }\n\n    navigator.geolocation.getCurrentPosition(onPositionReceive, undefined, options);\n    var watch = navigator.geolocation.watchPosition(onPositionReceive, undefined, options);\n    return function () {\n      navigator.geolocation.clearWatch(watch);\n    };\n  }, []);\n  return position;\n}","map":{"version":3,"sources":["/home/letterkenny/personal-site-remake/node_modules/@wojtekmaj/react-hooks/dist/esm/useCurrentPosition.js"],"names":["useEffect","useState","useCurrentPosition","options","_useState","position","setPosition","navigator","undefined","onPositionReceive","result","coords","geolocation","getCurrentPosition","watch","watchPosition","clearWatch"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,SAASC,kBAAT,CAA4BC,OAA5B,EAAqC;AAClD,MAAIC,SAAS,GAAGH,QAAQ,CAAC,IAAD,CAAxB;AAAA,MACII,QAAQ,GAAGD,SAAS,CAAC,CAAD,CADxB;AAAA,MAEIE,WAAW,GAAGF,SAAS,CAAC,CAAD,CAF3B;;AAIAJ,EAAAA,SAAS,CAAC,YAAY;AACpB,QAAI,EAAE,iBAAiBO,SAAnB,CAAJ,EAAmC;AACjC,aAAOC,SAAP;AACD;;AAED,aAASC,iBAAT,CAA2BC,MAA3B,EAAmC;AACjCJ,MAAAA,WAAW,CAACI,MAAM,CAACC,MAAR,CAAX;AACD;;AAEDJ,IAAAA,SAAS,CAACK,WAAV,CAAsBC,kBAAtB,CAAyCJ,iBAAzC,EAA4DD,SAA5D,EAAuEL,OAAvE;AACA,QAAIW,KAAK,GAAGP,SAAS,CAACK,WAAV,CAAsBG,aAAtB,CAAoCN,iBAApC,EAAuDD,SAAvD,EAAkEL,OAAlE,CAAZ;AACA,WAAO,YAAY;AACjBI,MAAAA,SAAS,CAACK,WAAV,CAAsBI,UAAtB,CAAiCF,KAAjC;AACD,KAFD;AAGD,GAdQ,EAcN,EAdM,CAAT;AAeA,SAAOT,QAAP;AACD","sourcesContent":["import { useEffect, useState } from 'react';\n/**\n * @typedef LatLng\n * @property {number} latitude Latitude\n * @property {number} longitude Longitude\n */\n\n/**\n * Returns current position from Geolocation API.\n *\n * @param {object} [options] Options to pass to Geolocation.getCurrentPosition\n *   and Geolocation.watchPosition. See https://developer.mozilla.org/en-US/docs/Web/API/PositionOptions\n * @returns {LatLng} Object wth latitude and longitude\n */\n\nexport default function useCurrentPosition(options) {\n  var _useState = useState(null),\n      position = _useState[0],\n      setPosition = _useState[1];\n\n  useEffect(function () {\n    if (!('geolocation' in navigator)) {\n      return undefined;\n    }\n\n    function onPositionReceive(result) {\n      setPosition(result.coords);\n    }\n\n    navigator.geolocation.getCurrentPosition(onPositionReceive, undefined, options);\n    var watch = navigator.geolocation.watchPosition(onPositionReceive, undefined, options);\n    return function () {\n      navigator.geolocation.clearWatch(watch);\n    };\n  }, []);\n  return position;\n}"]},"metadata":{},"sourceType":"module"}