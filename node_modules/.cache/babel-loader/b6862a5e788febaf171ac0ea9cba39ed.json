{"ast":null,"code":"import { useEffect } from 'react';\n/**\n * Observes a given element using IntersectionObserver.\n *\n * @param {HTMLElement} element Element to attach IntersectionObserver to\n * @param {object} options IntersectionObserver options. WARNING! If you define the object in\n *   component body, make sure to memoize it.\n * @param {Function} observerCallback IntersectionObserver callback. WARNING! If you define\n *   the function in component body, make sure to memoize it.\n */\n\nexport default function useIntersectionObserver(element, options, observerCallback) {\n  useEffect(function () {\n    if (!element || !('IntersectionObserver' in window)) {\n      return undefined;\n    }\n\n    var observer = new IntersectionObserver(observerCallback, options);\n    observer.observe(element);\n    return function () {\n      observer.disconnect();\n    };\n  }, [element, options, observerCallback]);\n}","map":{"version":3,"sources":["/home/letterkenny/personal-site-remake/node_modules/@wojtekmaj/react-hooks/dist/esm/useIntersectionObserver.js"],"names":["useEffect","useIntersectionObserver","element","options","observerCallback","window","undefined","observer","IntersectionObserver","observe","disconnect"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,SAASC,uBAAT,CAAiCC,OAAjC,EAA0CC,OAA1C,EAAmDC,gBAAnD,EAAqE;AAClFJ,EAAAA,SAAS,CAAC,YAAY;AACpB,QAAI,CAACE,OAAD,IAAY,EAAE,0BAA0BG,MAA5B,CAAhB,EAAqD;AACnD,aAAOC,SAAP;AACD;;AAED,QAAIC,QAAQ,GAAG,IAAIC,oBAAJ,CAAyBJ,gBAAzB,EAA2CD,OAA3C,CAAf;AACAI,IAAAA,QAAQ,CAACE,OAAT,CAAiBP,OAAjB;AACA,WAAO,YAAY;AACjBK,MAAAA,QAAQ,CAACG,UAAT;AACD,KAFD;AAGD,GAVQ,EAUN,CAACR,OAAD,EAAUC,OAAV,EAAmBC,gBAAnB,CAVM,CAAT;AAWD","sourcesContent":["import { useEffect } from 'react';\n/**\n * Observes a given element using IntersectionObserver.\n *\n * @param {HTMLElement} element Element to attach IntersectionObserver to\n * @param {object} options IntersectionObserver options. WARNING! If you define the object in\n *   component body, make sure to memoize it.\n * @param {Function} observerCallback IntersectionObserver callback. WARNING! If you define\n *   the function in component body, make sure to memoize it.\n */\n\nexport default function useIntersectionObserver(element, options, observerCallback) {\n  useEffect(function () {\n    if (!element || !('IntersectionObserver' in window)) {\n      return undefined;\n    }\n\n    var observer = new IntersectionObserver(observerCallback, options);\n    observer.observe(element);\n    return function () {\n      observer.disconnect();\n    };\n  }, [element, options, observerCallback]);\n}"]},"metadata":{},"sourceType":"module"}