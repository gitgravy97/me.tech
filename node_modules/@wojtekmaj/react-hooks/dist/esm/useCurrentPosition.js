import { useEffect, useState } from 'react';
/**
 * @typedef LatLng
 * @property {number} latitude Latitude
 * @property {number} longitude Longitude
 */

/**
 * Returns current position from Geolocation API.
 *
 * @param {object} [options] Options to pass to Geolocation.getCurrentPosition
 *   and Geolocation.watchPosition. See https://developer.mozilla.org/en-US/docs/Web/API/PositionOptions
 * @returns {LatLng} Object wth latitude and longitude
 */

export default function useCurrentPosition(options) {
  var _useState = useState(null),
      position = _useState[0],
      setPosition = _useState[1];

  useEffect(function () {
    if (!('geolocation' in navigator)) {
      return undefined;
    }

    function onPositionReceive(result) {
      setPosition(result.coords);
    }

    navigator.geolocation.getCurrentPosition(onPositionReceive, undefined, options);
    var watch = navigator.geolocation.watchPosition(onPositionReceive, undefined, options);
    return function () {
      navigator.geolocation.clearWatch(watch);
    };
  }, []);
  return position;
}