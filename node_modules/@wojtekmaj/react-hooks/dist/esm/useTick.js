import { useCallback, useState } from 'react';
import useSetInterval from './useSetInterval';
/**
 * Counts from 0, increasing the number returned every n milliseconds.
 *
 * @param {number} delay Interval between ticks (in ms)
 * @returns {number} Tick
 */

export default function useTick(delay) {
  if (delay === void 0) {
    delay = 1000;
  }

  var _useState = useState(0),
      tick = _useState[0],
      setTick = _useState[1];

  var doTick = useCallback(function () {
    setTick(function (prevSeconds) {
      return prevSeconds + 1;
    });
  }, []);
  useSetInterval(doTick, delay);
  return tick;
}